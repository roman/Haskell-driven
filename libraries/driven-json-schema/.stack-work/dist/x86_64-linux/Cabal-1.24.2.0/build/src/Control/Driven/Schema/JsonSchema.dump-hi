
==================== FINAL INTERFACE ====================
2017-06-02 05:47:24.139732 UTC

interface driven-json-schema-0.1.0.0-KuUCWXjwpG6HTwcoIcSRie:Control.Driven.Schema.JsonSchema 8002
  interface hash: 0f779c69d3eb111020f1e1b2c9f0da58
  ABI hash: f360819b1d3c6051c1d0a2a0e6607dea
  export-list hash: 6641caf0e8d1c1761ea48949d0818b39
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: c89636fa8015dc915f40460a09559408
  sig of: Nothing
  used TH splices: False
  where
exports:
  Control.Driven.Schema.JsonSchema._fetchSchemaReferences
  Control.Driven.Schema.JsonSchema._getJsonSchemaRecord
  Control.Driven.Schema.JsonSchema._getSchemaValidator
  Control.Driven.Schema.JsonSchema.buildJsonSchema
  Control.Driven.Schema.JsonSchema.json
  Control.Driven.Schema.JsonSchema.jsonHandler
  Control.Driven.Schema.JsonSchema.jsonSchema
  Control.Driven.Schema.JsonSchema.parseJsonSchemaSpec
  Control.Driven.Schema.JsonSchema.JsonEventHandler{Control.Driven.Schema.JsonSchema.JsonEventHandler}
  Control.Driven.Schema.JsonSchema.JsonOutputEvent{Control.Driven.Schema.JsonSchema.JsonOutputEvent}
  Control.Driven.Schema.JsonSchema.JsonSchemaError{Control.Driven.Schema.JsonSchema.JsonSchemaFileFormatError Control.Driven.Schema.JsonSchema.JsonSchemaHttpFailure Control.Driven.Schema.JsonSchema.JsonSchemaInvalid Control.Driven.Schema.JsonSchema.JsonSchemaMissmatch}
  Control.Driven.Schema.JsonSchema.JsonSchemaSpec{Control.Driven.Schema.JsonSchema.JsonSchemaSpec jsonSchemaPath}
module dependencies:
package dependencies: QuickCheck-2.9.2@QuickCheck-2.9.2-Jyj4gc4JxkEIgGFLAsGhs9
                      StateVar-1.1.0.4@StateVar-1.1.0.4-5dJbnTVECtEAhfJXPZKdbO
                      aeson-1.0.2.1@aeson-1.0.2.1-I9AyiKnSyfEHxczxWPq1iV
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj
                      attoparsec-0.13.1.0@attoparsec-0.13.1.0-ECR7lrm2wO64uP6OW8ZTCi
                      base-4.9.1.0
                      base-compat-0.9.3@base-compat-0.9.3-KeJp8zYMpcS9WibvTcxU22
                      base-orphans-0.5.4@base-orphans-0.5.4-ABoxiBf7nXc7Qqh66CgYc9
                      base64-bytestring-1.0.0.1@base64-bytestring-1.0.0.1-4O9TExPPz6eI82Yj7L4SIj
                      bifunctors-5.4.2@bifunctors-5.4.2-wt6HPG9UFgCjbd0zbVYNT
                      binary-0.8.3.0@binary-0.8.3.0
                      blaze-builder-0.4.0.2@blaze-builder-0.4.0.2-CGB8BvrFgghHy5bLy0SFOg
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      case-insensitive-1.2.0.10@case-insensitive-1.2.0.10-7eVVX59t93gCl3XctAmuil
                      comonad-5.0.1@comonad-5.0.1-7j4AeOMTFovFSFO9XMFm1
                      containers-0.5.7.1@containers-0.5.7.1
                      contravariant-1.4@contravariant-1.4-3UCY3arLvoG71jrGOYoc39
                      cookie-0.4.2.1@cookie-0.4.2.1-K68NuFIZ07nEstxwB6c3aL
                      data-default-class-0.1.2.0@data-default-class-0.1.2.0-GsXqKN6o1X9jr0fF5qCVD
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.3.0.0@directory-1.3.0.0
                      distributive-0.5.2@distributive-0.5.2-JCgfTXNR3ywAyV7fFWIBI5
                      dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD
                      driven-core-0.0.0.1@driven-core-0.0.0.1-8Ptpkov9QLzETutHwI3QHl
                      exceptions-0.8.3@exceptions-0.8.3-ADEDRATtUrMK1JW4zMQ9U
                      file-embed-0.0.10@file-embed-0.0.10-KWMmUDaNSRP7AxWSEHlrrK
                      filepath-1.4.1.1@filepath-1.4.1.1
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.6.0@hashable-1.2.6.0-3EXxoqeEgbfAKr6aGkye6x
                      hjsonpointer-1.1.1@hjsonpointer-1.1.1-E3pSWhA3Ton6k8mCDS9OCm
                      hjsonschema-1.5.0.1@hjsonschema-1.5.0.1-IvNekC9MVVv8e6On68z6i
                      http-client-0.5.7.0@http-client-0.5.7.0-JSz4PZzKJvbGmqugTOuWSp
                      http-types-0.9.1@http-types-0.9.1-JfqUh6MfqqR8Kpp4vaoPhu
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.1@integer-logarithms-1.0.1-IEHCuEd5sG4JjSjlx7m5JF
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      network-2.6.3.1@network-2.6.3.1-ABFtZSq90Z9BfMXNiqgBoe
                      network-uri-2.6.1.0@network-uri-2.6.1.0-EwGrJ9bdUqR1E7dAIJ4cwF
                      parsec-3.1.11@parsec-3.1.11-113irVHGgd88sRnywByDNw
                      pcre-heavy-1.0.0.2@pcre-heavy-1.0.0.2-6DHqZfvGbzMFDWHkNClJCG
                      pcre-light-0.4.0.4@pcre-light-0.4.0.4-5vhKlcsfx1G2vvKntSgJSg
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      profunctors-5.2@profunctors-5.2-85ZLvwISeusLRZoJlitoyP
                      protolude-0.1.10@protolude-0.1.10-6KZ4RB9zWepBfYwAkgb4xb
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      safe-0.3.14@safe-0.3.14-GsbXn9D9F3BDazVNcErzdQ
                      scientific-0.3.4.13@scientific-0.3.4.13-2xII4ZQfmEWrTXn2dbZc3
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      streaming-commons-0.1.17@streaming-commons-0.1.17-pXxQEId7Ie1SLoOLcDazB
                      string-conversions-0.4.0.1@string-conversions-0.4.0.1-5bhARACLQyXG4DLNegoSj4
                      tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt
                      template-haskell-2.11.1.0
                      text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR
                      tf-random-0.5@tf-random-0.5-BGjMgO8m67W8CHiEl15kZ7
                      time-1.6.0.1@time-1.6.0.1
                      time-locale-compat-0.1.1.3@time-locale-compat-0.1.1.3-KZ1jqNx8uhlHjmuPPj6V1Y
                      transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-IuFogs8HAVUJBWVNMhtssu
                      unix-2.7.2.1@unix-2.7.2.1
                      unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o
                      utf8-string-1.0.1.1@utf8-string-1.0.1.1-1DpjxLeTvGg7ttZZojxJR5
                      vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG
                      zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp
orphans: attoparsec-0.13.1.0@attoparsec-0.13.1.0-ECR7lrm2wO64uP6OW8ZTCi:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.1.0@attoparsec-0.13.1.0-ECR7lrm2wO64uP6OW8ZTCi:Data.Attoparsec.Text.Internal
         base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.6.0@hashable-1.2.6.0-3EXxoqeEgbfAKr6aGkye6x:Data.Hashable.Generic
         http-client-0.5.7.0@http-client-0.5.7.0-JSz4PZzKJvbGmqugTOuWSp:Network.HTTP.Client.Request
         network-2.6.3.1@network-2.6.3.1-ABFtZSq90Z9BfMXNiqgBoe:Network.Socket
         pcre-heavy-1.0.0.2@pcre-heavy-1.0.0.2-6DHqZfvGbzMFDWHkNClJCG:Text.Regex.PCRE.Heavy
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
family instance modules: attoparsec-0.13.1.0@attoparsec-0.13.1.0-ECR7lrm2wO64uP6OW8ZTCi:Data.Attoparsec.Internal.Types
                         base-4.9.1.0:Control.Applicative base-4.9.1.0:Data.Complex
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Compose
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         bifunctors-5.4.2@bifunctors-5.4.2-wt6HPG9UFgCjbd0zbVYNT:Data.Bifunctor.Biff
                         bifunctors-5.4.2@bifunctors-5.4.2-wt6HPG9UFgCjbd0zbVYNT:Data.Bifunctor.Clown
                         bifunctors-5.4.2@bifunctors-5.4.2-wt6HPG9UFgCjbd0zbVYNT:Data.Bifunctor.Joker
                         bifunctors-5.4.2@bifunctors-5.4.2-wt6HPG9UFgCjbd0zbVYNT:Data.Bifunctor.Product
                         bifunctors-5.4.2@bifunctors-5.4.2-wt6HPG9UFgCjbd0zbVYNT:Data.Bifunctor.Sum
                         bifunctors-5.4.2@bifunctors-5.4.2-wt6HPG9UFgCjbd0zbVYNT:Data.Bifunctor.Tannen
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         dlist-0.8.0.2@dlist-0.8.0.2-6Wnps4GD7EFnRucVzXIFD:Data.DList
                         driven-core-0.0.0.1@driven-core-0.0.0.1-8Ptpkov9QLzETutHwI3QHl:Control.Driven.Internal.Types
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         hjsonpointer-1.1.1@hjsonpointer-1.1.1-E3pSWhA3Ton6k8mCDS9OCm:JSONPointer
                         hjsonschema-1.5.0.1@hjsonschema-1.5.0.1-IvNekC9MVVv8e6On68z6i:JSONSchema.Validator.Draft4.Object.Properties
                         http-client-0.5.7.0@http-client-0.5.7.0-JSz4PZzKJvbGmqugTOuWSp:Network.HTTP.Client
                         network-uri-2.6.1.0@network-uri-2.6.1.0-EwGrJ9bdUqR1E7dAIJ4cwF:Network.URI
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         tagged-0.8.5@tagged-0.8.5-1mTloBSoUxv8dqUr8XBGBt:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text
                         text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Lazy
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o:Data.HashMap.Base
                         unordered-containers-0.2.8.0@unordered-containers-0.2.8.0-1XEErQCPPPc2SEtcHHNx9o:Data.HashSet
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Primitive
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Storable
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed
                         vector-0.11.0.0@vector-0.11.0.0-LMwQhhnXj8U3T5Bm1JFxG:Data.Vector.Unboxed.Base
                         zlib-0.6.1.2@zlib-0.6.1.2-7negTfm2ujt1gW4wr40MUp:Codec.Compression.Zlib.Stream
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-I9AyiKnSyfEHxczxWPq1iV:Data.Aeson 5b4888d63109633baa3bfe9ddb876972
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-I9AyiKnSyfEHxczxWPq1iV:Data.Aeson.Types cca8fe352d412dcafd792be797769137
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-I9AyiKnSyfEHxczxWPq1iV:Data.Aeson.Types.FromJSON 4de0d69cf80df520da0c90e71d8741e8
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-I9AyiKnSyfEHxczxWPq1iV:Data.Aeson.Types.Internal 854bb132d6f0fbcc043a2365356b51dc
import  -/  aeson-1.0.2.1@aeson-1.0.2.1-I9AyiKnSyfEHxczxWPq1iV:Data.Aeson.Types.ToJSON 31e13e0fbcc1628680533c9d371f5c81
import  -/  base-4.9.1.0:Control.Monad.IO.Class 1a4384f66ee999caf5366398edb6ca7b
import  -/  base-4.9.1.0:Data.Either 20b09ef8d0a5b74fdec011c40c1587f5
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Functor 5ab1dc703df5b482e77efb697833ca3c
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Exception e38fa3e73d54022fb9e3ce06477dfd07
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Lazy 208431757121593b5ca64b062df0cfbd
import  -/  driven-core-0.0.0.1@driven-core-0.0.0.1-8Ptpkov9QLzETutHwI3QHl:Control.Driven.Internal.Types 5c4a06bc351cb1f8c80518b06a68e39e
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  hjsonschema-1.5.0.1@hjsonschema-1.5.0.1-IvNekC9MVVv8e6On68z6i:JSONSchema.Draft4 cfba94f64286f22f1de7983bb09530d5
import  -/  hjsonschema-1.5.0.1@hjsonschema-1.5.0.1-IvNekC9MVVv8e6On68z6i:JSONSchema.Draft4.Failure 0810ab5f6570ab57a7d6302f8e44c869
import  -/  hjsonschema-1.5.0.1@hjsonschema-1.5.0.1-IvNekC9MVVv8e6On68z6i:JSONSchema.Draft4.Schema 66b55846004ad66efee63b4c51968bfc
import  -/  hjsonschema-1.5.0.1@hjsonschema-1.5.0.1-IvNekC9MVVv8e6On68z6i:JSONSchema.Fetch 223c62c6370e57fd93b50b8c759c456f
import  -/  protolude-0.1.10@protolude-0.1.10-6KZ4RB9zWepBfYwAkgb4xb:Protolude 1929b0698105a8ab90ed86f9f058e9f1
import  -/  text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text 9ba4693a108b74a0b1eb8f7d38f1abee
import  -/  text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Internal a2f6f66c5bb1247458d9fa25257ab188
import  -/  text-1.2.2.1@text-1.2.2.1-Ji7hMs2U4BkBwavd4taEVR:Data.Text.Show 638b4149d86790151d6d4eeca215be94
9d41d581c50735f6a14b683a6bd7fe6e
  $fExceptionJsonSchemaError ::
    GHC.Exception.Exception
      Control.Driven.Schema.JsonSchema.JsonSchemaError
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Control.Driven.Schema.JsonSchema.JsonSchemaError
                  Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError_$cp1Exception
                  Control.Driven.Schema.JsonSchema.$fShowJsonSchemaError
                  Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError_$ctoException
                  Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError_$cfromException
                  Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError_$cdisplayException -}
580a4958d4fd56157964ec2978eaf68f
  $fExceptionJsonSchemaError1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "JsonSchemaMissmatch "#) -}
80990a00bdd8e01d485ca89ae8866b6d
  $fExceptionJsonSchemaError2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "JsonSchemaInvalid "#) -}
8c1e188f72430b6591af592da8361761
  $fExceptionJsonSchemaError3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "JsonSchemaHttpFailure "#) -}
11da2679901445bd8d9f69366b05cfbc
  $fExceptionJsonSchemaError4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "JsonSchemaFileFormatError "#) -}
a090471fe2d0d574ba7745d99d1f2eb3
  $fExceptionJsonSchemaError5 :: Data.Typeable.Internal.TypeRep
  {- Unfolding: (case Data.Typeable.Internal.typeRepFingerprints
                        (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                        (GHC.Types.[]
                           @ Data.Typeable.Internal.TypeRep) of kt_fps { DEFAULT ->
                 case GHC.Fingerprint.fingerprintFingerprints
                        (GHC.Types.:
                           @ GHC.Fingerprint.Type.Fingerprint
                           Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError6
                           kt_fps) of dt { GHC.Fingerprint.Type.Fingerprint dt1 dt2 ->
                 Data.Typeable.Internal.TypeRep
                   dt1
                   dt2
                   Control.Driven.Schema.JsonSchema.$tcJsonSchemaError
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep)
                   (GHC.Types.[] @ Data.Typeable.Internal.TypeRep) } }) -}
4d7282f251c22dcfc3ce476af38fb1ac
  $fExceptionJsonSchemaError6 :: GHC.Fingerprint.Type.Fingerprint
  {- HasNoCafRefs,
     Unfolding: (GHC.Fingerprint.Type.Fingerprint
                   9413409794660789058##
                   4776147094889801454##) -}
9d41d581c50735f6a14b683a6bd7fe6e
  $fExceptionJsonSchemaError7 ::
    GHC.Prim.Proxy# Control.Driven.Schema.JsonSchema.JsonSchemaError
    -> Data.Typeable.Internal.TypeRep
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (wild :: GHC.Prim.Proxy#
                              Control.Driven.Schema.JsonSchema.JsonSchemaError) ->
                 Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError5) -}
9d41d581c50735f6a14b683a6bd7fe6e
  $fExceptionJsonSchemaError_$cdisplayException ::
    Control.Driven.Schema.JsonSchema.JsonSchemaError -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: InlineRule (0, True, True)
                Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError_$cshow -}
9d41d581c50735f6a14b683a6bd7fe6e
  $fExceptionJsonSchemaError_$cfromException ::
    GHC.Exception.SomeException
    -> GHC.Base.Maybe Control.Driven.Schema.JsonSchema.JsonSchemaError
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (eta :: GHC.Exception.SomeException) ->
                 case eta of wild { GHC.Exception.SomeException e10 $dException1 e2 ->
                 case (GHC.Exception.$p1Exception @ e10 $dException1)
                        `cast`
                      (Data.Typeable.Internal.N:Typeable[0] <*>_N <e10>_N)
                        (GHC.Prim.proxy#
                           @ *
                           @ e10) of wild1 { Data.Typeable.Internal.TypeRep dt dt1 ds2 ds3 ds4 ->
                 case Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError5 of wild2 { Data.Typeable.Internal.TypeRep dt2 dt3 ds5 ds6 ds7 ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.eqWord# dt dt2) of wild3 {
                   GHC.Types.False
                   -> GHC.Base.Nothing
                        @ Control.Driven.Schema.JsonSchema.JsonSchemaError
                   GHC.Types.True
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.eqWord# dt1 dt3) of wild4 {
                        GHC.Types.False
                        -> GHC.Base.Nothing
                             @ Control.Driven.Schema.JsonSchema.JsonSchemaError
                        GHC.Types.True
                        -> GHC.Base.Just
                             @ Control.Driven.Schema.JsonSchema.JsonSchemaError
                             e2
                               `cast`
                             (UnsafeCo representational e10 Control.Driven.Schema.JsonSchema.JsonSchemaError) } } } } }) -}
9d41d581c50735f6a14b683a6bd7fe6e
  $fExceptionJsonSchemaError_$cp1Exception ::
    Data.Typeable.Internal.Typeable
      Control.Driven.Schema.JsonSchema.JsonSchemaError
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError7
                  `cast`
                (Sym (Data.Typeable.Internal.N:Typeable[0]
                          <*>_N <Control.Driven.Schema.JsonSchema.JsonSchemaError>_N)) -}
9d41d581c50735f6a14b683a6bd7fe6e
  $fExceptionJsonSchemaError_$cshow ::
    Control.Driven.Schema.JsonSchema.JsonSchemaError -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (x :: Control.Driven.Schema.JsonSchema.JsonSchemaError) ->
                 case x of wild {
                   Control.Driven.Schema.JsonSchema.JsonSchemaFileFormatError b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError4
                        (case Data.Text.Show.$w$cshowsPrec
                                b1
                                (GHC.Types.[] @ GHC.Types.Char) of ww { (#,#) ww1 ww2 ->
                         GHC.Types.: @ GHC.Types.Char ww1 ww2 })
                   Control.Driven.Schema.JsonSchema.JsonSchemaHttpFailure b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError3
                        (JSONSchema.Fetch.$w$cshowsPrec1
                           11#
                           b1
                           (GHC.Types.[] @ GHC.Types.Char))
                   Control.Driven.Schema.JsonSchema.JsonSchemaInvalid b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError2
                        (JSONSchema.Draft4.Failure.$w$cshowsPrec2
                           11#
                           b1
                           (GHC.Types.[] @ GHC.Types.Char))
                   Control.Driven.Schema.JsonSchema.JsonSchemaMissmatch b1
                   -> GHC.Base.++
                        @ GHC.Types.Char
                        Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError1
                        (GHC.Show.showList__
                           @ JSONSchema.Draft4.Failure.ValidatorFailure
                           JSONSchema.Draft4.Failure.$fShowValidatorFailure1
                           b1
                           (GHC.Types.[] @ GHC.Types.Char)) }) -}
9d41d581c50735f6a14b683a6bd7fe6e
  $fExceptionJsonSchemaError_$ctoException ::
    Control.Driven.Schema.JsonSchema.JsonSchemaError
    -> GHC.Exception.SomeException
  {- Arity: 1 -}
7e29dbcf9e2321d6434e595fa164a2f6
  $fIEventHandlerJsonEventHandler ::
    Control.Driven.Internal.Types.IEventHandler
      Control.Driven.Schema.JsonSchema.JsonEventHandler
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Control.Driven.Schema.JsonSchema.JsonEventHandler
                  Control.Driven.Schema.JsonSchema.$fIEventHandlerJsonEventHandler_$chandlerTypeName
                  Control.Driven.Schema.JsonSchema.$fIEventHandlerJsonEventHandler_$chandleEvent -}
7e29dbcf9e2321d6434e595fa164a2f6
  $fIEventHandlerJsonEventHandler1 ::
    Control.Driven.Schema.JsonSchema.JsonEventHandler
    -> Data.ByteString.Internal.ByteString
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException
            [Control.Driven.Internal.Types.SomeOutputEvent] #)
  {- Arity: 3, Strictness: <S,1*U><S(SLSS),1*U(U,U,U,U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Control.Driven.Schema.JsonSchema.JsonEventHandler)
                   (w1 :: Data.ByteString.Internal.ByteString)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { Data.ByteString.Internal.PS ww1 ww2 ww3 ww4 ->
                 Control.Driven.Schema.JsonSchema.$w$chandleEvent
                   w
                   ww1
                   ww2
                   ww3
                   ww4
                   w2 }) -}
14bafa6618d8df14ec5dded3190340b4
  $fIEventHandlerJsonEventHandler2 :: Data.Text.Internal.Text
  {- Unfolding: (Data.Text.Show.unpackCString# "json_schema"#) -}
7e29dbcf9e2321d6434e595fa164a2f6
  $fIEventHandlerJsonEventHandler_$chandleEvent ::
    Control.Driven.Schema.JsonSchema.JsonEventHandler
    -> Data.ByteString.Internal.ByteString
    -> GHC.Types.IO
         (Data.Either.Either
            GHC.Exception.SomeException
            [Control.Driven.Internal.Types.SomeOutputEvent])
  {- Arity: 3, Strictness: <S,1*U><S(SLSS),1*U(U,U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Control.Driven.Schema.JsonSchema.$fIEventHandlerJsonEventHandler1
                  `cast`
                (<Control.Driven.Schema.JsonSchema.JsonEventHandler>_R
                 ->_R <Data.ByteString.Internal.ByteString>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Data.Either.Either
                                  GHC.Exception.SomeException
                                  [Control.Driven.Internal.Types.SomeOutputEvent]>_R)) -}
7e29dbcf9e2321d6434e595fa164a2f6
  $fIEventHandlerJsonEventHandler_$chandlerTypeName ::
    Control.Driven.Schema.JsonSchema.JsonEventHandler
    -> Data.Text.Internal.Text
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Control.Driven.Schema.JsonSchema.JsonEventHandler) ->
                 Control.Driven.Schema.JsonSchema.$fIEventHandlerJsonEventHandler2) -}
c4015ea07e4e31d703e9375ff3f3259c
  $fIOutputEventJsonOutputEvent ::
    Control.Driven.Internal.Types.IOutputEvent
      Control.Driven.Schema.JsonSchema.JsonOutputEvent
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Control.Driven.Schema.JsonSchema.$fIOutputEventJsonOutputEvent_$ceventName
                  `cast`
                (Sym (Control.Driven.Internal.Types.N:IOutputEvent[0]
                          <Control.Driven.Schema.JsonSchema.JsonOutputEvent>_N)) -}
c4015ea07e4e31d703e9375ff3f3259c
  $fIOutputEventJsonOutputEvent_$ceventName ::
    Control.Driven.Schema.JsonSchema.JsonOutputEvent
    -> Data.Text.Internal.Text
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Control.Driven.Schema.JsonSchema.JsonOutputEvent) ->
                 case ds of wild { Control.Driven.Schema.JsonSchema.JsonOutputEvent event $dIOutputEvent $dToJSON event1 ->
                 $dIOutputEvent
                   `cast`
                 (Control.Driven.Internal.Types.N:IOutputEvent[0] <event>_N)
                   event1 }) -}
c4015ea07e4e31d703e9375ff3f3259c
  $fIOutputSerializerJsonOutputEvent ::
    Control.Driven.Internal.Types.IOutputSerializer
      Control.Driven.Schema.JsonSchema.JsonOutputEvent
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Control.Driven.Schema.JsonSchema.JsonOutputEvent
                  Control.Driven.Schema.JsonSchema.$fIOutputEventJsonOutputEvent_$ceventName
                    `cast`
                  (Sym (Control.Driven.Internal.Types.N:IOutputEvent[0]
                            <Control.Driven.Schema.JsonSchema.JsonOutputEvent>_N))
                  Control.Driven.Schema.JsonSchema.$fIOutputSerializerJsonOutputEvent_$cserializeEvent -}
c4015ea07e4e31d703e9375ff3f3259c
  $fIOutputSerializerJsonOutputEvent_$cserializeEvent ::
    Control.Driven.Schema.JsonSchema.JsonOutputEvent
    -> Data.ByteString.Internal.ByteString
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (ds :: Control.Driven.Schema.JsonSchema.JsonOutputEvent) ->
                 case ds of wild { Control.Driven.Schema.JsonSchema.JsonOutputEvent event $dIOutputEvent $dToJSON event1 ->
                 Data.ByteString.Lazy.toStrict
                   (Data.ByteString.Builder.toLazyByteString
                      (Data.Aeson.Encoding.Builder.encodeToBuilder
                         (Data.Aeson.Types.ToJSON.toJSON @ event $dToJSON event1))) }) -}
9d41d581c50735f6a14b683a6bd7fe6e
  $fShowJsonSchemaError ::
    GHC.Show.Show Control.Driven.Schema.JsonSchema.JsonSchemaError
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Control.Driven.Schema.JsonSchema.JsonSchemaError
                  Control.Driven.Schema.JsonSchema.$fShowJsonSchemaError_$cshowsPrec
                  Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError_$cshow
                  Control.Driven.Schema.JsonSchema.$fShowJsonSchemaError_$cshowList -}
9d41d581c50735f6a14b683a6bd7fe6e
  $fShowJsonSchemaError1 ::
    Control.Driven.Schema.JsonSchema.JsonSchemaError -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ (w :: Control.Driven.Schema.JsonSchema.JsonSchemaError) ->
                 Control.Driven.Schema.JsonSchema.$w$cshowsPrec 0# w) -}
9d41d581c50735f6a14b683a6bd7fe6e
  $fShowJsonSchemaError_$cshowList ::
    [Control.Driven.Schema.JsonSchema.JsonSchemaError]
    -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__
                   @ Control.Driven.Schema.JsonSchema.JsonSchemaError
                   Control.Driven.Schema.JsonSchema.$fShowJsonSchemaError1) -}
9d41d581c50735f6a14b683a6bd7fe6e
  $fShowJsonSchemaError_$cshowsPrec ::
    GHC.Types.Int
    -> Control.Driven.Schema.JsonSchema.JsonSchemaError
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S(S),1*U(U)><S,1*U>, Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: GHC.Types.Int)
                   (w1 :: Control.Driven.Schema.JsonSchema.JsonSchemaError) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Control.Driven.Schema.JsonSchema.$w$cshowsPrec ww1 w1 }) -}
4e579dd873bdb0b486682fd870f99c76
  $tc'JsonEventHandler :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3953905514336731783##
                   7859369963437464574##
                   Control.Driven.Schema.JsonSchema.$trModule
                   Control.Driven.Schema.JsonSchema.$tc'JsonEventHandler1) -}
fe780418c98ecb9223d9540df988c664
  $tc'JsonEventHandler1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'JsonEventHandler"#) -}
f6bec6caa0369c8d7edcb661cbcbbe2c
  $tc'JsonOutputEvent :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   4495222477257558563##
                   11568061159172115582##
                   Control.Driven.Schema.JsonSchema.$trModule
                   Control.Driven.Schema.JsonSchema.$tc'JsonOutputEvent1) -}
c543ffb7a72b193f0205a7e7e46f20ca
  $tc'JsonOutputEvent1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'JsonOutputEvent"#) -}
5122091ff7d3462c6ba1bce22fd19c73
  $tc'JsonSchemaFileFormatError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2868256958695519191##
                   7466193120250607157##
                   Control.Driven.Schema.JsonSchema.$trModule
                   Control.Driven.Schema.JsonSchema.$tc'JsonSchemaFileFormatError1) -}
caf1916ca6025dd745cbbebf74150546
  $tc'JsonSchemaFileFormatError1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'JsonSchemaFileFormatError"#) -}
47ee2bd2ec75b6490d2518c911e02ad9
  $tc'JsonSchemaHttpFailure :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15320198767893238629##
                   5559557742377084951##
                   Control.Driven.Schema.JsonSchema.$trModule
                   Control.Driven.Schema.JsonSchema.$tc'JsonSchemaHttpFailure1) -}
5d9c26af4670d5c909c4e687269b9bd8
  $tc'JsonSchemaHttpFailure1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'JsonSchemaHttpFailure"#) -}
4c1f9b208a4cf6e7257f177f47bae7e6
  $tc'JsonSchemaInvalid :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3016209461590907493##
                   4761386697543978934##
                   Control.Driven.Schema.JsonSchema.$trModule
                   Control.Driven.Schema.JsonSchema.$tc'JsonSchemaInvalid1) -}
9ca5bfa114cfdc9bf10a67f48cee1771
  $tc'JsonSchemaInvalid1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'JsonSchemaInvalid"#) -}
8cf9038688c01fbd4fdac3c32efffac8
  $tc'JsonSchemaMissmatch :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8326205995010475849##
                   6050903539215216351##
                   Control.Driven.Schema.JsonSchema.$trModule
                   Control.Driven.Schema.JsonSchema.$tc'JsonSchemaMissmatch1) -}
f8e06026047f56160819d47e476d7967
  $tc'JsonSchemaMissmatch1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'JsonSchemaMissmatch"#) -}
462940f01926fe2c98b691c963c831d2
  $tc'JsonSchemaSpec :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   15705502235241838056##
                   4724007311091342013##
                   Control.Driven.Schema.JsonSchema.$trModule
                   Control.Driven.Schema.JsonSchema.$tc'JsonSchemaSpec1) -}
b2ae3097b82d8002d21ded7db7fb0bfc
  $tc'JsonSchemaSpec1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'JsonSchemaSpec"#) -}
b10503b3d4d825277854f238899f0858
  $tcJsonEventHandler :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16449615720803197327##
                   7553370508240024872##
                   Control.Driven.Schema.JsonSchema.$trModule
                   Control.Driven.Schema.JsonSchema.$tcJsonEventHandler1) -}
c412d607f73cd7f1a0b9baa266af3f98
  $tcJsonEventHandler1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "JsonEventHandler"#) -}
28c9f48a708978dbedeb8fd68dcd3a9a
  $tcJsonOutputEvent :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2625455818858343757##
                   11989084510243227763##
                   Control.Driven.Schema.JsonSchema.$trModule
                   Control.Driven.Schema.JsonSchema.$tcJsonOutputEvent1) -}
9e01847805f92f0d5d337254227d6e04
  $tcJsonOutputEvent1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "JsonOutputEvent"#) -}
46fd89fd44468464d178ef4950e0f73c
  $tcJsonSchemaError :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9413409794660789058##
                   4776147094889801454##
                   Control.Driven.Schema.JsonSchema.$trModule
                   Control.Driven.Schema.JsonSchema.$tcJsonSchemaError1) -}
df972c2d89094b7cf565955e9c68e8cc
  $tcJsonSchemaError1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "JsonSchemaError"#) -}
547c96b537f37ad9719ef19195282244
  $tcJsonSchemaSpec :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7029523205825688710##
                   11768559730821770253##
                   Control.Driven.Schema.JsonSchema.$trModule
                   Control.Driven.Schema.JsonSchema.$tcJsonSchemaSpec1) -}
8284b5924042b41383f4390845f4a104
  $tcJsonSchemaSpec1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "JsonSchemaSpec"#) -}
aacd8fce3c3abea9baf01bca01148844
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Control.Driven.Schema.JsonSchema.$trModule2
                   Control.Driven.Schema.JsonSchema.$trModule1) -}
bda6ed56f5fce61a5adcd920f381f710
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "Control.Driven.Schema.JsonSchema"#) -}
845bf3b3cd60206017c0bccff45d3998
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "driven-json-schema-0.1.0.0-KuUCWXjwpG6HTwcoIcSRie"#) -}
7e29dbcf9e2321d6434e595fa164a2f6
  $w$chandleEvent ::
    Control.Driven.Schema.JsonSchema.JsonEventHandler
    -> GHC.Prim.Addr#
    -> GHC.ForeignPtr.ForeignPtrContents
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException
            [Control.Driven.Internal.Types.SomeOutputEvent] #)
  {- Arity: 6, Strictness: <S,1*U><S,U><L,U><S,U><S,U><S,U>,
     Inline: [0] -}
9d41d581c50735f6a14b683a6bd7fe6e
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> Control.Driven.Schema.JsonSchema.JsonSchemaError
    -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,U><S,1*U>, Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.Int#)
                   (w :: Control.Driven.Schema.JsonSchema.JsonSchemaError) ->
                 case w of wild {
                   Control.Driven.Schema.JsonSchema.JsonSchemaFileFormatError b1
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError4
                             (case Data.Text.Show.$w$cshowsPrec b1 x of ww1 { (#,#) ww2 ww3 ->
                              GHC.Types.: @ GHC.Types.Char ww2 ww3 })
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError4
                                (case Data.Text.Show.$w$cshowsPrec
                                        b1
                                        (GHC.Types.:
                                           @ GHC.Types.Char
                                           GHC.Show.shows4
                                           x) of ww1 { (#,#) ww2 ww3 ->
                                 GHC.Types.: @ GHC.Types.Char ww2 ww3 })) }
                   Control.Driven.Schema.JsonSchema.JsonSchemaHttpFailure b1
                   -> let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = JSONSchema.Fetch.$w$cshowsPrec1 11# b1
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError3
                             (g x)
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError3
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x))) }
                   Control.Driven.Schema.JsonSchema.JsonSchemaInvalid b1
                   -> let {
                        g :: GHC.Base.String -> GHC.Base.String
                        = JSONSchema.Draft4.Failure.$w$cshowsPrec2 11# b1
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError2
                             (g x)
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError2
                                (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x))) }
                   Control.Driven.Schema.JsonSchema.JsonSchemaMissmatch b1
                   -> case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.>=# ww 11#) of wild1 {
                        GHC.Types.False
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Base.++
                             @ GHC.Types.Char
                             Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError1
                             (GHC.Show.showList__
                                @ JSONSchema.Draft4.Failure.ValidatorFailure
                                JSONSchema.Draft4.Failure.$fShowValidatorFailure1
                                b1
                                x)
                        GHC.Types.True
                        -> \ (x :: GHC.Base.String) ->
                           GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows7
                             (GHC.Base.++
                                @ GHC.Types.Char
                                Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError1
                                (GHC.Show.showList__
                                   @ JSONSchema.Draft4.Failure.ValidatorFailure
                                   JSONSchema.Draft4.Failure.$fShowValidatorFailure1
                                   b1
                                   (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x))) } }) -}
62eafd13be01a9fe403a07a9d5ce76a7
  $wjsonSchema ::
    Data.Aeson.Types.Internal.Value
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe Control.Driven.Internal.Types.Schema #)
  {- Arity: 2, Strictness: <S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Data.Aeson.Types.Internal.Value)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case (Control.Driven.Schema.JsonSchema.parseJsonSchemaSpec ww)
                        `cast`
                      (Data.Aeson.Types.Internal.N:Parser[0]
                           <Control.Driven.Schema.JsonSchema.JsonSchemaSpec>_R)
                        @ (Data.Either.Either GHC.Base.String)
                        @ Control.Driven.Schema.JsonSchema.JsonSchemaSpec
                        (GHC.Types.[] @ Data.Aeson.Types.Internal.JSONPathElement)
                        Control.Driven.Schema.JsonSchema.jsonSchema2
                        (Data.Either.Right
                           @ GHC.Base.String
                           @ Control.Driven.Schema.JsonSchema.JsonSchemaSpec) of wild {
                   Data.Either.Left ds
                   -> (# w, GHC.Base.Nothing @ Control.Driven.Internal.Types.Schema #)
                   Data.Either.Right ds
                   -> case Control.Driven.Schema.JsonSchema._getJsonSchemaRecord5
                             @ JSONSchema.Draft4.Schema.Schema
                             JSONSchema.Draft4.Schema.$fFromJSONSchema
                             ds `cast` (Control.Driven.Schema.JsonSchema.N:JsonSchemaSpec[0])
                             w of ds1 { (#,#) ipv ipv1 ->
                      case Control.Driven.Schema.JsonSchema.buildJsonSchema2
                             ipv1
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      (# ipv2,
                         GHC.Base.Just
                           @ Control.Driven.Internal.Types.Schema
                           ipv3 #) } } }) -}
7e29dbcf9e2321d6434e595fa164a2f6
  data JsonEventHandler where
    JsonEventHandler :: Data.Aeson.Types.FromJSON.FromJSON event =>
                        (event
                         -> GHC.Types.IO [Control.Driven.Internal.Types.SomeOutputEvent])
                        -> JsonEventHandler
c4015ea07e4e31d703e9375ff3f3259c
  data JsonOutputEvent where
    JsonOutputEvent :: (Control.Driven.Internal.Types.IOutputEvent
                          event,
                        Data.Aeson.Types.ToJSON.ToJSON event) =>
                       event -> JsonOutputEvent
9d41d581c50735f6a14b683a6bd7fe6e
  data JsonSchemaError
    = JsonSchemaFileFormatError Data.Text.Internal.Text
    | JsonSchemaHttpFailure JSONSchema.Fetch.HTTPFailure
    | JsonSchemaInvalid JSONSchema.Draft4.Failure.SchemaInvalid
    | JsonSchemaMissmatch [JSONSchema.Draft4.Failure.ValidatorFailure]
302e68ed8fa4f8d091cd3683d248ad42
  newtype JsonSchemaSpec
    = JsonSchemaSpec {jsonSchemaPath :: Data.Text.Internal.Text}
82aff05927da6f500659ab0eaa21525d
  _fetchSchemaReferences ::
    JSONSchema.Fetch.SchemaWithURI JSONSchema.Draft4.Schema.Schema
    -> GHC.Types.IO
         (JSONSchema.Fetch.URISchemaMap JSONSchema.Draft4.Schema.Schema)
  {- Arity: 2, Strictness: <L,U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Control.Driven.Schema.JsonSchema._fetchSchemaReferences1
                  `cast`
                (<JSONSchema.Fetch.SchemaWithURI JSONSchema.Draft4.Schema.Schema>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <JSONSchema.Fetch.URISchemaMap
                                  JSONSchema.Draft4.Schema.Schema>_R)) -}
1061ca657ce19e2f15e8172e650351a5
  _fetchSchemaReferences1 ::
    JSONSchema.Fetch.SchemaWithURI JSONSchema.Draft4.Schema.Schema
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          JSONSchema.Fetch.URISchemaMap JSONSchema.Draft4.Schema.Schema #)
  {- Arity: 2, Strictness: <L,U(U,U)><S,U>,
     Unfolding: (\ (schemaSpec :: JSONSchema.Fetch.SchemaWithURI
                                    JSONSchema.Draft4.Schema.Schema)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case JSONSchema.Fetch.referencesViaHTTP'1
                        @ JSONSchema.Draft4.Schema.Schema
                        JSONSchema.Draft4.Schema.$fFromJSONSchema
                        JSONSchema.Draft4.draft4FetchInfo
                        schemaSpec
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   Data.Either.Left err
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ (JSONSchema.Fetch.URISchemaMap JSONSchema.Draft4.Schema.Schema)
                        (Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError_$ctoException
                           (Control.Driven.Schema.JsonSchema.JsonSchemaHttpFailure err))
                        ipv
                   Data.Either.Right schema -> (# ipv, schema #) } }) -}
f9d6019f8d62d83c1fc170ae15b746ca
  _getJsonSchemaRecord ::
    Data.Aeson.Types.FromJSON.FromJSON schema =>
    Data.Text.Internal.Text
    -> GHC.Types.IO (JSONSchema.Fetch.SchemaWithURI schema)
  {- Arity: 3,
     Strictness: <L,1*U(1*C1(C1(C1(C1(U)))),A)><L,U(U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Control.Driven.Schema.JsonSchema._getJsonSchemaRecord5
                  `cast`
                (forall (schema :: <*>_N).
                 <Data.Aeson.Types.FromJSON.FromJSON schema>_R
                 ->_R <Data.Text.Internal.Text>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <JSONSchema.Fetch.SchemaWithURI schema>_R)) -}
02df5ab60ff03065cf9b62e8f4e7f21d
  _getJsonSchemaRecord3 ::
    Data.Attoparsec.ByteString.Lazy.Result
      Data.Aeson.Types.Internal.Value
  {- Unfolding: (Data.Attoparsec.ByteString.Lazy.parse_$sgo
                   @ Data.Aeson.Types.Internal.Value
                   Control.Driven.Schema.JsonSchema._getJsonSchemaRecord4) -}
e708ae347eb4f7202b0c2e8b06e211d6
  _getJsonSchemaRecord4 ::
    Data.Attoparsec.Internal.Types.IResult
      Data.ByteString.Internal.ByteString Data.Aeson.Types.Internal.Value
  {- Unfolding: (Data.Aeson.Parser.Internal.$wjsonEOF
                   @ Data.Aeson.Types.Internal.Value
                   __NULL
                   Data.ByteString.Internal.$fMonoidByteString3
                   0#
                   0#
                   0#
                   0#
                   0#
                   Data.Attoparsec.Internal.Types.Incomplete
                   (Data.Attoparsec.ByteString.Internal.failK
                      @ Data.Aeson.Types.Internal.Value)
                     `cast`
                   (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                    ->_R <Data.Attoparsec.Internal.Types.Pos
                          -> Data.Attoparsec.Internal.Types.More
                          -> [GHC.Base.String]
                          -> GHC.Base.String
                          -> Data.Attoparsec.Internal.Types.IResult
                               Data.ByteString.Internal.ByteString
                               Data.Aeson.Types.Internal.Value>_R)
                   (Data.Attoparsec.ByteString.Internal.successK
                      @ Data.Aeson.Types.Internal.Value)
                     `cast`
                   (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                    ->_R <Data.Attoparsec.Internal.Types.Pos
                          -> Data.Attoparsec.Internal.Types.More
                          -> Data.Aeson.Types.Internal.Value
                          -> Data.Attoparsec.Internal.Types.IResult
                               Data.ByteString.Internal.ByteString
                               Data.Aeson.Types.Internal.Value>_R)) -}
8a4527b9c15648f0452ad95e71383d70
  _getJsonSchemaRecord5 ::
    Data.Aeson.Types.FromJSON.FromJSON schema =>
    Data.Text.Internal.Text
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          JSONSchema.Fetch.SchemaWithURI schema #)
  {- Arity: 3,
     Strictness: <L,1*U(1*C1(C1(C1(C1(U)))),A)><L,U(U,U,U)><S,U> -}
91e69db080335d04c81bb6617d963e4f
  _getSchemaValidator ::
    Control.Monad.IO.Class.MonadIO m =>
    JSONSchema.Fetch.SchemaWithURI JSONSchema.Draft4.Schema.Schema
    -> JSONSchema.Fetch.URISchemaMap JSONSchema.Draft4.Schema.Schema
    -> m Control.Driven.Internal.Types.Schema
  {- Arity: 3,
     Strictness: <S,1*U(1*U(A,A,A,1*C1(U),A),1*C1(U))><L,U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U)><L,U>,
     Unfolding: (\ @ (m :: * -> *)
                   ($dMonadIO :: Control.Monad.IO.Class.MonadIO m)
                   (eta :: JSONSchema.Fetch.SchemaWithURI
                             JSONSchema.Draft4.Schema.Schema)
                   (eta1 :: JSONSchema.Fetch.URISchemaMap
                              JSONSchema.Draft4.Schema.Schema) ->
                 case JSONSchema.Draft4.checkSchema eta1 eta of wild {
                   Data.Either.Left err
                   -> Control.Monad.IO.Class.liftIO
                        @ m
                        $dMonadIO
                        @ Control.Driven.Internal.Types.Schema
                        (\ (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         GHC.Prim.raiseIO#
                           @ GHC.Exception.SomeException
                           @ Control.Driven.Internal.Types.Schema
                           (Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError_$ctoException
                              (Control.Driven.Schema.JsonSchema.JsonSchemaInvalid err))
                           eta2)
                          `cast`
                        (Sym (GHC.Types.N:IO[0] <Control.Driven.Internal.Types.Schema>_R))
                   Data.Either.Right validator
                   -> GHC.Base.return
                        @ m
                        (Control.Monad.IO.Class.$p1MonadIO @ m $dMonadIO)
                        @ (Data.ByteString.Internal.ByteString
                           -> Data.Either.Either GHC.Exception.SomeException ())
                        (\ (outputBytes :: Data.ByteString.Internal.ByteString) ->
                         case validator
                                (case outputBytes of wild1 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                                 case Data.Aeson.Parser.Internal.$wjsonEOF
                                        @ Data.Aeson.Types.Internal.Value
                                        dt
                                        dt1
                                        dt2
                                        dt3
                                        dt3
                                        0#
                                        0#
                                        Data.Attoparsec.Internal.Types.Complete
                                        (Data.Attoparsec.ByteString.Internal.failK
                                           @ Data.Aeson.Types.Internal.Value)
                                          `cast`
                                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                         ->_R <Data.Attoparsec.Internal.Types.Pos
                                               -> Data.Attoparsec.Internal.Types.More
                                               -> [GHC.Base.String]
                                               -> GHC.Base.String
                                               -> Data.Attoparsec.Internal.Types.IResult
                                                    Data.ByteString.Internal.ByteString
                                                    Data.Aeson.Types.Internal.Value>_R)
                                        (Data.Attoparsec.ByteString.Internal.successK
                                           @ Data.Aeson.Types.Internal.Value)
                                          `cast`
                                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                         ->_R <Data.Attoparsec.Internal.Types.Pos
                                               -> Data.Attoparsec.Internal.Types.More
                                               -> Data.Aeson.Types.Internal.Value
                                               -> Data.Attoparsec.Internal.Types.IResult
                                                    Data.ByteString.Internal.ByteString
                                                    Data.Aeson.Types.Internal.Value>_R) of wild2 {
                                   Data.Attoparsec.Internal.Types.Fail ds ds1 err
                                   -> case ds1 of wild3 {
                                        []
                                        -> case Control.Driven.Schema.JsonSchema._getSchemaValidator4
                                           ret_ty Data.Aeson.Types.Internal.Value
                                           of {}
                                        : ipv ipv1
                                        -> case Control.Driven.Schema.JsonSchema._getSchemaValidator4
                                           ret_ty Data.Aeson.Types.Internal.Value
                                           of {} }
                                   Data.Attoparsec.Internal.Types.Partial ipv
                                   -> case Control.Driven.Schema.JsonSchema._getSchemaValidator3
                                      ret_ty Data.Aeson.Types.Internal.Value
                                      of {}
                                   Data.Attoparsec.Internal.Types.Done ds a1 -> a1 } }) of wild1 {
                           [] -> Control.Driven.Schema.JsonSchema._getSchemaValidator2
                           : ds1 ds2
                           -> Data.Either.Left
                                @ GHC.Exception.SomeException
                                @ ()
                                (Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError_$ctoException
                                   (Control.Driven.Schema.JsonSchema.JsonSchemaMissmatch
                                      wild1)) }) }) -}
04b3e7d601fbe475557d81a497c7de02
  _getSchemaValidator1 ::
    JSONSchema.Fetch.SchemaWithURI JSONSchema.Draft4.Schema.Schema
    -> JSONSchema.Fetch.URISchemaMap JSONSchema.Draft4.Schema.Schema
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Control.Driven.Internal.Types.Schema #)
  {- Arity: 3,
     Strictness: <L,U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U)><L,U><S,U>,
     Unfolding: (\ (eta :: JSONSchema.Fetch.SchemaWithURI
                             JSONSchema.Draft4.Schema.Schema)
                   (eta1 :: JSONSchema.Fetch.URISchemaMap
                              JSONSchema.Draft4.Schema.Schema)
                   (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case JSONSchema.Draft4.checkSchema eta1 eta of wild {
                   Data.Either.Left err
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ Control.Driven.Internal.Types.Schema
                        (Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError_$ctoException
                           (Control.Driven.Schema.JsonSchema.JsonSchemaInvalid err))
                        eta2
                   Data.Either.Right validator
                   -> (# eta2,
                         \ (outputBytes :: Data.ByteString.Internal.ByteString) ->
                         case validator
                                (case outputBytes of wild1 { Data.ByteString.Internal.PS dt dt1 dt2 dt3 ->
                                 case Data.Aeson.Parser.Internal.$wjsonEOF
                                        @ Data.Aeson.Types.Internal.Value
                                        dt
                                        dt1
                                        dt2
                                        dt3
                                        dt3
                                        0#
                                        0#
                                        Data.Attoparsec.Internal.Types.Complete
                                        (Data.Attoparsec.ByteString.Internal.failK
                                           @ Data.Aeson.Types.Internal.Value)
                                          `cast`
                                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                         ->_R <Data.Attoparsec.Internal.Types.Pos
                                               -> Data.Attoparsec.Internal.Types.More
                                               -> [GHC.Base.String]
                                               -> GHC.Base.String
                                               -> Data.Attoparsec.Internal.Types.IResult
                                                    Data.ByteString.Internal.ByteString
                                                    Data.Aeson.Types.Internal.Value>_R)
                                        (Data.Attoparsec.ByteString.Internal.successK
                                           @ Data.Aeson.Types.Internal.Value)
                                          `cast`
                                        (Sub (Sym (Data.Attoparsec.Internal.Types.D:R:StateByteString[0]))
                                         ->_R <Data.Attoparsec.Internal.Types.Pos
                                               -> Data.Attoparsec.Internal.Types.More
                                               -> Data.Aeson.Types.Internal.Value
                                               -> Data.Attoparsec.Internal.Types.IResult
                                                    Data.ByteString.Internal.ByteString
                                                    Data.Aeson.Types.Internal.Value>_R) of wild2 {
                                   Data.Attoparsec.Internal.Types.Fail ds ds1 err
                                   -> case ds1 of wild3 {
                                        []
                                        -> case Control.Driven.Schema.JsonSchema._getSchemaValidator4
                                           ret_ty Data.Aeson.Types.Internal.Value
                                           of {}
                                        : ipv ipv1
                                        -> case Control.Driven.Schema.JsonSchema._getSchemaValidator4
                                           ret_ty Data.Aeson.Types.Internal.Value
                                           of {} }
                                   Data.Attoparsec.Internal.Types.Partial ipv
                                   -> case Control.Driven.Schema.JsonSchema._getSchemaValidator3
                                      ret_ty Data.Aeson.Types.Internal.Value
                                      of {}
                                   Data.Attoparsec.Internal.Types.Done ds a1 -> a1 } }) of wild1 {
                           [] -> Control.Driven.Schema.JsonSchema._getSchemaValidator2
                           : ds1 ds2
                           -> Data.Either.Left
                                @ GHC.Exception.SomeException
                                @ ()
                                (Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError_$ctoException
                                   (Control.Driven.Schema.JsonSchema.JsonSchemaMissmatch
                                      wild1)) } #) }) -}
b803b2b34c95b71d4dcfa197bdd45a55
  _getSchemaValidator2 ::
    Data.Either.Either GHC.Exception.SomeException ()
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Data.Either.Right
                   @ GHC.Exception.SomeException
                   @ ()
                   GHC.Tuple.()) -}
6c196509ea87566843182dc02dfebf92
  _getSchemaValidator3 ::
    Data.Either.Either GHC.Base.String Data.Aeson.Types.Internal.Value
  {- Strictness: x -}
b490bbab4593cef07886c025e6cd8711
  _getSchemaValidator4 :: (Data.Aeson.Types.Internal.Value)
  {- Strictness: x -}
8a00c813f55680c1040f15af51916ff1
  buildJsonSchema ::
    Data.Text.Internal.Text
    -> GHC.Types.IO Control.Driven.Internal.Types.Schema
  {- Arity: 2, Strictness: <L,U(U,U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Control.Driven.Schema.JsonSchema.buildJsonSchema1
                  `cast`
                (<Data.Text.Internal.Text>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <Control.Driven.Internal.Types.Schema>_R)) -}
f661fdc0d8a5478b90af9203817708ad
  buildJsonSchema1 ::
    Data.Text.Internal.Text
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Control.Driven.Internal.Types.Schema #)
  {- Arity: 2, Strictness: <L,U(U,U,U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (schemaFile :: Data.Text.Internal.Text)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Control.Driven.Schema.JsonSchema._getJsonSchemaRecord5
                        @ JSONSchema.Draft4.Schema.Schema
                        JSONSchema.Draft4.Schema.$fFromJSONSchema
                        schemaFile
                        s of ds1 { (#,#) ipv ipv1 ->
                 Control.Driven.Schema.JsonSchema.buildJsonSchema2 ipv1 ipv }) -}
b03a78f2e88f3de30d678d7dd2f7ee1a
  buildJsonSchema2 ::
    JSONSchema.Fetch.SchemaWithURI JSONSchema.Draft4.Schema.Schema
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Control.Driven.Internal.Types.Schema #)
  {- Arity: 2,
     Strictness: <L,U(U(U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U,U),U)><S,U>,
     Unfolding: (\ (schemaSpec :: JSONSchema.Fetch.SchemaWithURI
                                    JSONSchema.Draft4.Schema.Schema)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case JSONSchema.Fetch.referencesViaHTTP'1
                        @ JSONSchema.Draft4.Schema.Schema
                        JSONSchema.Draft4.Schema.$fFromJSONSchema
                        JSONSchema.Draft4.draft4FetchInfo
                        schemaSpec
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   Data.Either.Left err
                   -> case GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ (JSONSchema.Fetch.URISchemaMap JSONSchema.Draft4.Schema.Schema)
                             (Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError_$ctoException
                                (Control.Driven.Schema.JsonSchema.JsonSchemaHttpFailure err))
                             ipv
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                Control.Driven.Internal.Types.Schema #)
                      of {}
                   Data.Either.Right schema
                   -> Control.Driven.Schema.JsonSchema._getSchemaValidator1
                        schemaSpec
                        schema
                        ipv } }) -}
24e9134e7706f91a219d4f6b08cadebe
  json ::
    (Control.Driven.Internal.Types.IOutputEvent event,
     Data.Aeson.Types.ToJSON.ToJSON event) =>
    event -> Control.Driven.Internal.Types.SomeOutputEvent
  {- Arity: 3, Strictness: <L,U><L,U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ event
                   ($dIOutputEvent :: Control.Driven.Internal.Types.IOutputEvent
                                        event)
                   ($dToJSON :: Data.Aeson.Types.ToJSON.ToJSON event)
                   (eta :: event) ->
                 Control.Driven.Internal.Types.SomeOutputEvent
                   @ Control.Driven.Schema.JsonSchema.JsonOutputEvent
                   Control.Driven.Schema.JsonSchema.$fIOutputSerializerJsonOutputEvent
                   (Control.Driven.Schema.JsonSchema.JsonOutputEvent
                      @ event
                      $dIOutputEvent
                      $dToJSON
                      eta)) -}
8e9d1baee9c6f7cfc72efdd89e9f4821
  jsonHandler ::
    Data.Aeson.Types.FromJSON.FromJSON event =>
    (event
     -> GHC.Types.IO [Control.Driven.Internal.Types.SomeOutputEvent])
    -> Control.Driven.Internal.Types.SomeEventHandler
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ event
                   ($dFromJSON :: Data.Aeson.Types.FromJSON.FromJSON event)
                   (eta :: event
                           -> GHC.Types.IO [Control.Driven.Internal.Types.SomeOutputEvent]) ->
                 Control.Driven.Internal.Types.SomeEventHandler
                   @ Control.Driven.Schema.JsonSchema.JsonEventHandler
                   Control.Driven.Schema.JsonSchema.$fIEventHandlerJsonEventHandler
                   (Control.Driven.Schema.JsonSchema.JsonEventHandler
                      @ event
                      $dFromJSON
                      eta)) -}
ee554e91269acb779698f301fd715934
  jsonSchema :: Control.Driven.Internal.Types.SchemaSpec
  {- Arity: 2, Strictness: <S(SLL),1*U(1*U,A,A)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Control.Driven.Schema.JsonSchema.jsonSchema1
                  `cast`
                (<Control.Driven.Internal.Types.EventSpec>_R
                 ->_R Sym (GHC.Types.N:IO[0]
                               <GHC.Base.Maybe Control.Driven.Internal.Types.Schema>_R)) -}
0606c9a9e45a45df878549bad7e17623
  jsonSchema1 ::
    Control.Driven.Internal.Types.EventSpec
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe Control.Driven.Internal.Types.Schema #)
  {- Arity: 2, Strictness: <S(SLL),1*U(1*U,A,A)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Control.Driven.Internal.Types.EventSpec)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Control.Driven.Internal.Types.EventSpec ww1 ww2 ww3 ->
                 Control.Driven.Schema.JsonSchema.$wjsonSchema ww1 w1 }) -}
8665f481f10b47d7c18188525864399b
  jsonSchema2 ::
    Data.Aeson.Types.Internal.JSONPath
    -> GHC.Base.String
    -> Data.Either.Either
         GHC.Base.String Control.Driven.Schema.JsonSchema.JsonSchemaSpec
  {- Arity: 2,
     Unfolding: (\ (path :: Data.Aeson.Types.Internal.JSONPath)
                   (msg2 :: GHC.Base.String) ->
                 Data.Either.Left
                   @ GHC.Base.String
                   @ Control.Driven.Schema.JsonSchema.JsonSchemaSpec
                   (Data.Aeson.Types.Internal.formatError path msg2)) -}
15909f11623c7d3c655872ecc89fdcc5
  jsonSchemaPath ::
    Control.Driven.Schema.JsonSchema.JsonSchemaSpec
    -> Data.Text.Internal.Text
  RecSel Left Control.Driven.Schema.JsonSchema.JsonSchemaSpec
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (0, True, True)
                Control.Driven.Schema.JsonSchema.jsonSchemaPath1
                  `cast`
                (<Control.Driven.Schema.JsonSchema.JsonSchemaSpec>_R
                 ->_R Control.Driven.Schema.JsonSchema.N:JsonSchemaSpec[0]) -}
a8a6420a76cfc2b4285738f96b5a7cc6
  jsonSchemaPath1 ::
    Control.Driven.Schema.JsonSchema.JsonSchemaSpec
    -> Control.Driven.Schema.JsonSchema.JsonSchemaSpec
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: Control.Driven.Schema.JsonSchema.JsonSchemaSpec) ->
                 ds) -}
e2e509f369a5fc91ee690a2b237d6383
  parseJsonSchemaSpec ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         Control.Driven.Schema.JsonSchema.JsonSchemaSpec
  {- Arity: 1, Strictness: <S,1*U> -}
instance GHC.Exception.Exception [Control.Driven.Schema.JsonSchema.JsonSchemaError]
  = Control.Driven.Schema.JsonSchema.$fExceptionJsonSchemaError
instance Control.Driven.Internal.Types.IEventHandler [Control.Driven.Schema.JsonSchema.JsonEventHandler]
  = Control.Driven.Schema.JsonSchema.$fIEventHandlerJsonEventHandler
instance Control.Driven.Internal.Types.IOutputEvent [Control.Driven.Schema.JsonSchema.JsonOutputEvent]
  = Control.Driven.Schema.JsonSchema.$fIOutputEventJsonOutputEvent
instance Control.Driven.Internal.Types.IOutputSerializer [Control.Driven.Schema.JsonSchema.JsonOutputEvent]
  = Control.Driven.Schema.JsonSchema.$fIOutputSerializerJsonOutputEvent
instance GHC.Show.Show [Control.Driven.Schema.JsonSchema.JsonSchemaError]
  = Control.Driven.Schema.JsonSchema.$fShowJsonSchemaError
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

